MDA scan file format

[FILE HEADER]
	xdr_float:	version  (1.2, 1.3, or 1.4)
	xdr_long:	scan number
	xdr_short:	data's rank (number of dimensions)
	xdr_vector(rank, xdr_long):	requested dimensions of scan
	xdr_short:	regular (equals 1 if dimensions changed during scan)
	xdr_long:	extra PVs location, as offset from beginning of file

[SCAN]
	[HEADER]
	xdr_short:		this scan's rank
	xdr_long:		number of requested points (NPTS)
	xdr_long:		current point (last point completed)
	if scan rank is > 1
	  xdr_vector(NPTS, xdr_long):	locations to lower scans, as offset
					from the beginning of the file

	[INFO]
	xdr_counted_string:	scan name (EPICS scan record)
	xdr_counted_string:	time stamp

	xdr_short:		number of positioners
	xdr_short:		number of detectors
	xdr_short:		number of triggers

	for each positioner
	  xdr_short:		positioner number
	  xdr_counted_string:	positioner name
	  xdr_counted_string:	positioner desc
	  xdr_counted_string:	positioner step mode
	  xdr_counted_string:	positioner unit
	  xdr_counted_string:	readback name
	  xdr_counted_string:	readback description
	  xdr_counted_string:	readback unit

	for each detector
	  xdr_short:		detector number
	  xdr_counted_string:	detector name
	  xdr_counted_string:	detector desc
	  xdr_counted_string:	detector unit

	for each trigger
	  xdr_short:		trigger number
	  xdr_counted_string:	trigger name
	  xdr_float:		trigger command

	[DATA]
	for each positioner
	  xdr_vector(NPTS, xdr_double):	readback array

	for each detector
	  xdr_vector(NPTS, xdr_float):	detector array

[SCAN]
...
...
...
[SCAN]

[EXTRA PVs]
	xdr_short:	number of extra pvs

	for each pv
	  xdr_counted_string:	name
	  xdr_counted_string:	desc
	  xdr_short:		type
	  if type != DBR_STRING
	    xdr_short:		count
	    xdr_counted_string:	unit

	  depending on the type:
	    DBR_STRING:
		xdr_counted_string:		value
	    DBR_CTRL_CHAR:
		xdr_vector(count, xdr_byte):	value
	    DBR_CTRL_SHORT:
		xdr_vector(count, xdr_short):	value
	    DBR_CTRL_LONG:
		xdr_vector(count, xdr_long):	value
	    DBR_CTRL_FLOAT:
		xdr_vector(count, xdr_float):	value
	    DBR_CTRL_DOUBLE:
		xdr_vector(count, xdr_double):	value
